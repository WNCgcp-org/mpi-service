# Cloud Build configuration for MPI Service
substitutions:
  _REPO_NAME: mpi-service
  _SERVICE_NAME: mpi-service
  _REGION: us-central1
  _ENV: ${_ENV}

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/${_REPO_NAME}:${SHORT_SHA}'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/${_REPO_NAME}:${_ENV}-latest'
      - '-f'
      - 'Dockerfile'
      - '.'
    timeout: '600s'

  # Step 2: Push to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/${PROJECT_ID}/${_REPO_NAME}'
    waitFor: ['build-image']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-service'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}-${_ENV}'
      - '--image=gcr.io/${PROJECT_ID}/${_REPO_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--concurrency=100'
      - '--cpu=2'
      - '--memory=4Gi'
      - '--min-instances=1'
      - '--max-instances=100'
      - '--timeout=300'
      - '--set-env-vars=^##^MPI_PROVIDER=verato##REDIS_HOST=${_REDIS_HOST}##MONGODB_URI=${_MONGODB_URI}##ENVIRONMENT=${_ENV}'
      - '--set-secrets=VERATO_API_KEY=verato-api-key-${_ENV}:latest'
      - '--service-account=mpi-service-${_ENV}@${PROJECT_ID}.iam.gserviceaccount.com'
    waitFor: ['push-image']

  # Step 4: Run smoke tests
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'smoke-test'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME}-${_ENV} --region=${_REGION} --format='value(status.url)')
        echo "Testing service at $${SERVICE_URL}"

        # Health check
        curl -f "$${SERVICE_URL}/health" || exit 1

        # Test single match endpoint
        curl -f -X POST "$${SERVICE_URL}/mpi/match" \
          -H "Content-Type: application/json" \
          -d '{"patient_data": {"ssn": "TEST-123", "first_name": "Test", "last_name": "User"}}' \
          || exit 1
    waitFor: ['deploy-service']
    timeout: '120s'

timeout: '1200s'

# Artifact registry for storing images
images:
  - 'gcr.io/${PROJECT_ID}/${_REPO_NAME}:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/${_REPO_NAME}:${_ENV}-latest'